// Copyright 2025 Canonical Ltd.
// SPDX-License-Identifier: AGPL-3.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: v0/clients/model.proto

package clients

import (
	http "github.com/canonical/identity-platform-api/v0/http"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Client struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessTokenStrategy                        *string                `protobuf:"bytes,1,opt,name=access_token_strategy,json=accessTokenStrategy,proto3,oneof" json:"access_token_strategy,omitempty"`
	AllowedCorsOrigins                         []string               `protobuf:"bytes,2,rep,name=allowed_cors_origins,json=allowedCorsOrigins,proto3" json:"allowed_cors_origins,omitempty"`
	Audience                                   []string               `protobuf:"bytes,3,rep,name=audience,proto3" json:"audience,omitempty"`
	AuthorizationCodeGrantAccessTokenLifespan  *string                `protobuf:"bytes,4,opt,name=authorization_code_grant_access_token_lifespan,json=authorizationCodeGrantAccessTokenLifespan,proto3,oneof" json:"authorization_code_grant_access_token_lifespan,omitempty"`
	AuthorizationCodeGrantIdTokenLifespan      *string                `protobuf:"bytes,5,opt,name=authorization_code_grant_id_token_lifespan,json=authorizationCodeGrantIdTokenLifespan,proto3,oneof" json:"authorization_code_grant_id_token_lifespan,omitempty"`
	AuthorizationCodeGrantRefreshTokenLifespan *string                `protobuf:"bytes,6,opt,name=authorization_code_grant_refresh_token_lifespan,json=authorizationCodeGrantRefreshTokenLifespan,proto3,oneof" json:"authorization_code_grant_refresh_token_lifespan,omitempty"`
	BackchannelLogoutSessionRequired           *bool                  `protobuf:"varint,7,opt,name=backchannel_logout_session_required,json=backchannelLogoutSessionRequired,proto3,oneof" json:"backchannel_logout_session_required,omitempty"`
	BackchannelLogoutUri                       *string                `protobuf:"bytes,8,opt,name=backchannel_logout_uri,json=backchannelLogoutUri,proto3,oneof" json:"backchannel_logout_uri,omitempty"`
	ClientCredentialsGrantAccessTokenLifespan  *string                `protobuf:"bytes,9,opt,name=client_credentials_grant_access_token_lifespan,json=clientCredentialsGrantAccessTokenLifespan,proto3,oneof" json:"client_credentials_grant_access_token_lifespan,omitempty"`
	ClientId                                   *string                `protobuf:"bytes,10,opt,name=client_id,json=clientId,proto3,oneof" json:"client_id,omitempty"`
	ClientName                                 *string                `protobuf:"bytes,11,opt,name=client_name,json=clientName,proto3,oneof" json:"client_name,omitempty"`
	ClientSecret                               *string                `protobuf:"bytes,12,opt,name=client_secret,json=clientSecret,proto3,oneof" json:"client_secret,omitempty"`
	ClientSecretExpiresAt                      *int64                 `protobuf:"varint,13,opt,name=client_secret_expires_at,json=clientSecretExpiresAt,proto3,oneof" json:"client_secret_expires_at,omitempty"`
	ClientUri                                  *string                `protobuf:"bytes,14,opt,name=client_uri,json=clientUri,proto3,oneof" json:"client_uri,omitempty"`
	Contacts                                   []string               `protobuf:"bytes,15,rep,name=contacts,proto3" json:"contacts,omitempty"`
	CreatedAt                                  *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	FrontchannelLogoutSessionRequired          *bool                  `protobuf:"varint,17,opt,name=frontchannel_logout_session_required,json=frontchannelLogoutSessionRequired,proto3,oneof" json:"frontchannel_logout_session_required,omitempty"`
	FrontchannelLogoutUri                      *string                `protobuf:"bytes,18,opt,name=frontchannel_logout_uri,json=frontchannelLogoutUri,proto3,oneof" json:"frontchannel_logout_uri,omitempty"`
	GrantTypes                                 []string               `protobuf:"bytes,19,rep,name=grant_types,json=grantTypes,proto3" json:"grant_types,omitempty"`
	ImplicitGrantAccessTokenLifespan           *string                `protobuf:"bytes,20,opt,name=implicit_grant_access_token_lifespan,json=implicitGrantAccessTokenLifespan,proto3,oneof" json:"implicit_grant_access_token_lifespan,omitempty"`
	ImplicitGrantIdTokenLifespan               *string                `protobuf:"bytes,21,opt,name=implicit_grant_id_token_lifespan,json=implicitGrantIdTokenLifespan,proto3,oneof" json:"implicit_grant_id_token_lifespan,omitempty"`
	Jwks                                       *structpb.Struct       `protobuf:"bytes,22,opt,name=jwks,proto3" json:"jwks,omitempty"`
	JwksUri                                    *string                `protobuf:"bytes,23,opt,name=jwks_uri,json=jwksUri,proto3,oneof" json:"jwks_uri,omitempty"`
	JwtBearerGrantAccessTokenLifespan          *string                `protobuf:"bytes,24,opt,name=jwt_bearer_grant_access_token_lifespan,json=jwtBearerGrantAccessTokenLifespan,proto3,oneof" json:"jwt_bearer_grant_access_token_lifespan,omitempty"`
	LogoUri                                    *string                `protobuf:"bytes,25,opt,name=logo_uri,json=logoUri,proto3,oneof" json:"logo_uri,omitempty"`
	Metadata                                   *structpb.Struct       `protobuf:"bytes,26,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Owner                                      *string                `protobuf:"bytes,27,opt,name=owner,proto3,oneof" json:"owner,omitempty"`
	PolicyUri                                  *string                `protobuf:"bytes,28,opt,name=policy_uri,json=policyUri,proto3,oneof" json:"policy_uri,omitempty"`
	PostLogoutRedirectUris                     []string               `protobuf:"bytes,29,rep,name=post_logout_redirect_uris,json=postLogoutRedirectUris,proto3" json:"post_logout_redirect_uris,omitempty"`
	RedirectUris                               []string               `protobuf:"bytes,30,rep,name=redirect_uris,json=redirectUris,proto3" json:"redirect_uris,omitempty"`
	RefreshTokenGrantAccessTokenLifespan       *string                `protobuf:"bytes,31,opt,name=refresh_token_grant_access_token_lifespan,json=refreshTokenGrantAccessTokenLifespan,proto3,oneof" json:"refresh_token_grant_access_token_lifespan,omitempty"`
	RefreshTokenGrantIdTokenLifespan           *string                `protobuf:"bytes,32,opt,name=refresh_token_grant_id_token_lifespan,json=refreshTokenGrantIdTokenLifespan,proto3,oneof" json:"refresh_token_grant_id_token_lifespan,omitempty"`
	RefreshTokenGrantRefreshTokenLifespan      *string                `protobuf:"bytes,33,opt,name=refresh_token_grant_refresh_token_lifespan,json=refreshTokenGrantRefreshTokenLifespan,proto3,oneof" json:"refresh_token_grant_refresh_token_lifespan,omitempty"`
	RegistrationAccessToken                    *string                `protobuf:"bytes,34,opt,name=registration_access_token,json=registrationAccessToken,proto3,oneof" json:"registration_access_token,omitempty"`
	RegistrationClientUri                      *string                `protobuf:"bytes,35,opt,name=registration_client_uri,json=registrationClientUri,proto3,oneof" json:"registration_client_uri,omitempty"`
	RequestObjectSigningAlg                    *string                `protobuf:"bytes,36,opt,name=request_object_signing_alg,json=requestObjectSigningAlg,proto3,oneof" json:"request_object_signing_alg,omitempty"`
	RequestUris                                []string               `protobuf:"bytes,37,rep,name=request_uris,json=requestUris,proto3" json:"request_uris,omitempty"`
	ResponseTypes                              []string               `protobuf:"bytes,38,rep,name=response_types,json=responseTypes,proto3" json:"response_types,omitempty"`
	Scope                                      *string                `protobuf:"bytes,39,opt,name=scope,proto3,oneof" json:"scope,omitempty"`
	SectorIdentifierUri                        *string                `protobuf:"bytes,40,opt,name=sector_identifier_uri,json=sectorIdentifierUri,proto3,oneof" json:"sector_identifier_uri,omitempty"`
	SkipConsent                                *bool                  `protobuf:"varint,41,opt,name=skip_consent,json=skipConsent,proto3,oneof" json:"skip_consent,omitempty"`
	SubjectType                                *string                `protobuf:"bytes,42,opt,name=subject_type,json=subjectType,proto3,oneof" json:"subject_type,omitempty"`
	TokenEndpointAuthMethod                    *string                `protobuf:"bytes,43,opt,name=token_endpoint_auth_method,json=tokenEndpointAuthMethod,proto3,oneof" json:"token_endpoint_auth_method,omitempty"`
	TokenEndpointAuthSigningAlg                *string                `protobuf:"bytes,44,opt,name=token_endpoint_auth_signing_alg,json=tokenEndpointAuthSigningAlg,proto3,oneof" json:"token_endpoint_auth_signing_alg,omitempty"`
	TosUri                                     *string                `protobuf:"bytes,45,opt,name=tos_uri,json=tosUri,proto3,oneof" json:"tos_uri,omitempty"`
	UpdatedAt                                  *timestamppb.Timestamp `protobuf:"bytes,46,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UserinfoSignedResponseAlg                  *string                `protobuf:"bytes,47,opt,name=userinfo_signed_response_alg,json=userinfoSignedResponseAlg,proto3,oneof" json:"userinfo_signed_response_alg,omitempty"`
}

func (x *Client) Reset() {
	*x = Client{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_clients_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client) ProtoMessage() {}

func (x *Client) ProtoReflect() protoreflect.Message {
	mi := &file_v0_clients_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client.ProtoReflect.Descriptor instead.
func (*Client) Descriptor() ([]byte, []int) {
	return file_v0_clients_model_proto_rawDescGZIP(), []int{0}
}

func (x *Client) GetAccessTokenStrategy() string {
	if x != nil && x.AccessTokenStrategy != nil {
		return *x.AccessTokenStrategy
	}
	return ""
}

func (x *Client) GetAllowedCorsOrigins() []string {
	if x != nil {
		return x.AllowedCorsOrigins
	}
	return nil
}

func (x *Client) GetAudience() []string {
	if x != nil {
		return x.Audience
	}
	return nil
}

func (x *Client) GetAuthorizationCodeGrantAccessTokenLifespan() string {
	if x != nil && x.AuthorizationCodeGrantAccessTokenLifespan != nil {
		return *x.AuthorizationCodeGrantAccessTokenLifespan
	}
	return ""
}

func (x *Client) GetAuthorizationCodeGrantIdTokenLifespan() string {
	if x != nil && x.AuthorizationCodeGrantIdTokenLifespan != nil {
		return *x.AuthorizationCodeGrantIdTokenLifespan
	}
	return ""
}

func (x *Client) GetAuthorizationCodeGrantRefreshTokenLifespan() string {
	if x != nil && x.AuthorizationCodeGrantRefreshTokenLifespan != nil {
		return *x.AuthorizationCodeGrantRefreshTokenLifespan
	}
	return ""
}

func (x *Client) GetBackchannelLogoutSessionRequired() bool {
	if x != nil && x.BackchannelLogoutSessionRequired != nil {
		return *x.BackchannelLogoutSessionRequired
	}
	return false
}

func (x *Client) GetBackchannelLogoutUri() string {
	if x != nil && x.BackchannelLogoutUri != nil {
		return *x.BackchannelLogoutUri
	}
	return ""
}

func (x *Client) GetClientCredentialsGrantAccessTokenLifespan() string {
	if x != nil && x.ClientCredentialsGrantAccessTokenLifespan != nil {
		return *x.ClientCredentialsGrantAccessTokenLifespan
	}
	return ""
}

func (x *Client) GetClientId() string {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return ""
}

func (x *Client) GetClientName() string {
	if x != nil && x.ClientName != nil {
		return *x.ClientName
	}
	return ""
}

func (x *Client) GetClientSecret() string {
	if x != nil && x.ClientSecret != nil {
		return *x.ClientSecret
	}
	return ""
}

func (x *Client) GetClientSecretExpiresAt() int64 {
	if x != nil && x.ClientSecretExpiresAt != nil {
		return *x.ClientSecretExpiresAt
	}
	return 0
}

func (x *Client) GetClientUri() string {
	if x != nil && x.ClientUri != nil {
		return *x.ClientUri
	}
	return ""
}

func (x *Client) GetContacts() []string {
	if x != nil {
		return x.Contacts
	}
	return nil
}

func (x *Client) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Client) GetFrontchannelLogoutSessionRequired() bool {
	if x != nil && x.FrontchannelLogoutSessionRequired != nil {
		return *x.FrontchannelLogoutSessionRequired
	}
	return false
}

func (x *Client) GetFrontchannelLogoutUri() string {
	if x != nil && x.FrontchannelLogoutUri != nil {
		return *x.FrontchannelLogoutUri
	}
	return ""
}

func (x *Client) GetGrantTypes() []string {
	if x != nil {
		return x.GrantTypes
	}
	return nil
}

func (x *Client) GetImplicitGrantAccessTokenLifespan() string {
	if x != nil && x.ImplicitGrantAccessTokenLifespan != nil {
		return *x.ImplicitGrantAccessTokenLifespan
	}
	return ""
}

func (x *Client) GetImplicitGrantIdTokenLifespan() string {
	if x != nil && x.ImplicitGrantIdTokenLifespan != nil {
		return *x.ImplicitGrantIdTokenLifespan
	}
	return ""
}

func (x *Client) GetJwks() *structpb.Struct {
	if x != nil {
		return x.Jwks
	}
	return nil
}

func (x *Client) GetJwksUri() string {
	if x != nil && x.JwksUri != nil {
		return *x.JwksUri
	}
	return ""
}

func (x *Client) GetJwtBearerGrantAccessTokenLifespan() string {
	if x != nil && x.JwtBearerGrantAccessTokenLifespan != nil {
		return *x.JwtBearerGrantAccessTokenLifespan
	}
	return ""
}

func (x *Client) GetLogoUri() string {
	if x != nil && x.LogoUri != nil {
		return *x.LogoUri
	}
	return ""
}

func (x *Client) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Client) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *Client) GetPolicyUri() string {
	if x != nil && x.PolicyUri != nil {
		return *x.PolicyUri
	}
	return ""
}

func (x *Client) GetPostLogoutRedirectUris() []string {
	if x != nil {
		return x.PostLogoutRedirectUris
	}
	return nil
}

func (x *Client) GetRedirectUris() []string {
	if x != nil {
		return x.RedirectUris
	}
	return nil
}

func (x *Client) GetRefreshTokenGrantAccessTokenLifespan() string {
	if x != nil && x.RefreshTokenGrantAccessTokenLifespan != nil {
		return *x.RefreshTokenGrantAccessTokenLifespan
	}
	return ""
}

func (x *Client) GetRefreshTokenGrantIdTokenLifespan() string {
	if x != nil && x.RefreshTokenGrantIdTokenLifespan != nil {
		return *x.RefreshTokenGrantIdTokenLifespan
	}
	return ""
}

func (x *Client) GetRefreshTokenGrantRefreshTokenLifespan() string {
	if x != nil && x.RefreshTokenGrantRefreshTokenLifespan != nil {
		return *x.RefreshTokenGrantRefreshTokenLifespan
	}
	return ""
}

func (x *Client) GetRegistrationAccessToken() string {
	if x != nil && x.RegistrationAccessToken != nil {
		return *x.RegistrationAccessToken
	}
	return ""
}

func (x *Client) GetRegistrationClientUri() string {
	if x != nil && x.RegistrationClientUri != nil {
		return *x.RegistrationClientUri
	}
	return ""
}

func (x *Client) GetRequestObjectSigningAlg() string {
	if x != nil && x.RequestObjectSigningAlg != nil {
		return *x.RequestObjectSigningAlg
	}
	return ""
}

func (x *Client) GetRequestUris() []string {
	if x != nil {
		return x.RequestUris
	}
	return nil
}

func (x *Client) GetResponseTypes() []string {
	if x != nil {
		return x.ResponseTypes
	}
	return nil
}

func (x *Client) GetScope() string {
	if x != nil && x.Scope != nil {
		return *x.Scope
	}
	return ""
}

func (x *Client) GetSectorIdentifierUri() string {
	if x != nil && x.SectorIdentifierUri != nil {
		return *x.SectorIdentifierUri
	}
	return ""
}

func (x *Client) GetSkipConsent() bool {
	if x != nil && x.SkipConsent != nil {
		return *x.SkipConsent
	}
	return false
}

func (x *Client) GetSubjectType() string {
	if x != nil && x.SubjectType != nil {
		return *x.SubjectType
	}
	return ""
}

func (x *Client) GetTokenEndpointAuthMethod() string {
	if x != nil && x.TokenEndpointAuthMethod != nil {
		return *x.TokenEndpointAuthMethod
	}
	return ""
}

func (x *Client) GetTokenEndpointAuthSigningAlg() string {
	if x != nil && x.TokenEndpointAuthSigningAlg != nil {
		return *x.TokenEndpointAuthSigningAlg
	}
	return ""
}

func (x *Client) GetTosUri() string {
	if x != nil && x.TosUri != nil {
		return *x.TosUri
	}
	return ""
}

func (x *Client) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Client) GetUserinfoSignedResponseAlg() string {
	if x != nil && x.UserinfoSignedResponseAlg != nil {
		return *x.UserinfoSignedResponseAlg
	}
	return ""
}

type ListClientsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientName string  `protobuf:"bytes,1,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	Owner      string  `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Size       *string `protobuf:"bytes,3,opt,name=size,proto3,oneof" json:"size,omitempty"`
	PageToken  string  `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListClientsReq) Reset() {
	*x = ListClientsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_clients_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClientsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClientsReq) ProtoMessage() {}

func (x *ListClientsReq) ProtoReflect() protoreflect.Message {
	mi := &file_v0_clients_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClientsReq.ProtoReflect.Descriptor instead.
func (*ListClientsReq) Descriptor() ([]byte, []int) {
	return file_v0_clients_model_proto_rawDescGZIP(), []int{1}
}

func (x *ListClientsReq) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *ListClientsReq) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ListClientsReq) GetSize() string {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return ""
}

func (x *ListClientsReq) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListClientsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    []*Client        `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Status  int32            `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Message *string          `protobuf:"bytes,3,opt,name=message,proto3,oneof" json:"message,omitempty"`
	XMeta   *http.Pagination `protobuf:"bytes,4,opt,name=_meta,json=Meta,proto3,oneof" json:"_meta,omitempty"`
}

func (x *ListClientsResp) Reset() {
	*x = ListClientsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_clients_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClientsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClientsResp) ProtoMessage() {}

func (x *ListClientsResp) ProtoReflect() protoreflect.Message {
	mi := &file_v0_clients_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClientsResp.ProtoReflect.Descriptor instead.
func (*ListClientsResp) Descriptor() ([]byte, []int) {
	return file_v0_clients_model_proto_rawDescGZIP(), []int{2}
}

func (x *ListClientsResp) GetData() []*Client {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListClientsResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListClientsResp) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *ListClientsResp) GetXMeta() *http.Pagination {
	if x != nil {
		return x.XMeta
	}
	return nil
}

type GetClientReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetClientReq) Reset() {
	*x = GetClientReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_clients_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientReq) ProtoMessage() {}

func (x *GetClientReq) ProtoReflect() protoreflect.Message {
	mi := &file_v0_clients_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientReq.ProtoReflect.Descriptor instead.
func (*GetClientReq) Descriptor() ([]byte, []int) {
	return file_v0_clients_model_proto_rawDescGZIP(), []int{3}
}

func (x *GetClientReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetClientResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *Client `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Status  int32   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Message *string `protobuf:"bytes,3,opt,name=message,proto3,oneof" json:"message,omitempty"`
}

func (x *GetClientResp) Reset() {
	*x = GetClientResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_clients_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientResp) ProtoMessage() {}

func (x *GetClientResp) ProtoReflect() protoreflect.Message {
	mi := &file_v0_clients_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientResp.ProtoReflect.Descriptor instead.
func (*GetClientResp) Descriptor() ([]byte, []int) {
	return file_v0_clients_model_proto_rawDescGZIP(), []int{4}
}

func (x *GetClientResp) GetData() *Client {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetClientResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetClientResp) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type CreateClientReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Client *Client `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
}

func (x *CreateClientReq) Reset() {
	*x = CreateClientReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_clients_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClientReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClientReq) ProtoMessage() {}

func (x *CreateClientReq) ProtoReflect() protoreflect.Message {
	mi := &file_v0_clients_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClientReq.ProtoReflect.Descriptor instead.
func (*CreateClientReq) Descriptor() ([]byte, []int) {
	return file_v0_clients_model_proto_rawDescGZIP(), []int{5}
}

func (x *CreateClientReq) GetClient() *Client {
	if x != nil {
		return x.Client
	}
	return nil
}

type CreateClientResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *Client `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Status  int32   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Message *string `protobuf:"bytes,3,opt,name=message,proto3,oneof" json:"message,omitempty"`
}

func (x *CreateClientResp) Reset() {
	*x = CreateClientResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_clients_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClientResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClientResp) ProtoMessage() {}

func (x *CreateClientResp) ProtoReflect() protoreflect.Message {
	mi := &file_v0_clients_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClientResp.ProtoReflect.Descriptor instead.
func (*CreateClientResp) Descriptor() ([]byte, []int) {
	return file_v0_clients_model_proto_rawDescGZIP(), []int{6}
}

func (x *CreateClientResp) GetData() *Client {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateClientResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateClientResp) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type UpdateClientReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Client *Client `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
}

func (x *UpdateClientReq) Reset() {
	*x = UpdateClientReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_clients_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClientReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClientReq) ProtoMessage() {}

func (x *UpdateClientReq) ProtoReflect() protoreflect.Message {
	mi := &file_v0_clients_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClientReq.ProtoReflect.Descriptor instead.
func (*UpdateClientReq) Descriptor() ([]byte, []int) {
	return file_v0_clients_model_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateClientReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateClientReq) GetClient() *Client {
	if x != nil {
		return x.Client
	}
	return nil
}

type UpdateClientResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *Client `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Status  int32   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Message *string `protobuf:"bytes,3,opt,name=message,proto3,oneof" json:"message,omitempty"`
}

func (x *UpdateClientResp) Reset() {
	*x = UpdateClientResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_clients_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClientResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClientResp) ProtoMessage() {}

func (x *UpdateClientResp) ProtoReflect() protoreflect.Message {
	mi := &file_v0_clients_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClientResp.ProtoReflect.Descriptor instead.
func (*UpdateClientResp) Descriptor() ([]byte, []int) {
	return file_v0_clients_model_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateClientResp) GetData() *Client {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateClientResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateClientResp) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type RemoveClientReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveClientReq) Reset() {
	*x = RemoveClientReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_clients_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveClientReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveClientReq) ProtoMessage() {}

func (x *RemoveClientReq) ProtoReflect() protoreflect.Message {
	mi := &file_v0_clients_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveClientReq.ProtoReflect.Descriptor instead.
func (*RemoveClientReq) Descriptor() ([]byte, []int) {
	return file_v0_clients_model_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveClientReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RemoveClientResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Message *string `protobuf:"bytes,3,opt,name=message,proto3,oneof" json:"message,omitempty"`
}

func (x *RemoveClientResp) Reset() {
	*x = RemoveClientResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v0_clients_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveClientResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveClientResp) ProtoMessage() {}

func (x *RemoveClientResp) ProtoReflect() protoreflect.Message {
	mi := &file_v0_clients_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveClientResp.ProtoReflect.Descriptor instead.
func (*RemoveClientResp) Descriptor() ([]byte, []int) {
	return file_v0_clients_model_proto_rawDescGZIP(), []int{10}
}

func (x *RemoveClientResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RemoveClientResp) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

var File_v0_clients_model_proto protoreflect.FileDescriptor

var file_v0_clients_model_proto_rawDesc = []byte{
	0x0a, 0x16, 0x76, 0x30, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x13, 0x76, 0x30, 0x2f, 0x68, 0x74, 0x74, 0x70,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x1d, 0x0a, 0x06,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x15, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x13, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x30, 0x0a, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x72, 0x73, 0x5f,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x43, 0x6f, 0x72, 0x73, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x66, 0x0a,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x29, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x70,
	0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x5e, 0x0a, 0x2a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x73,
	0x70, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x25, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x70,
	0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x68, 0x0a, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x6c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x2a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x52, 0x0a, 0x23, 0x62, 0x61, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6c,
	0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x20,
	0x62, 0x61, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x16, 0x62, 0x61, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x14, 0x62, 0x61, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x55, 0x72, 0x69, 0x88, 0x01, 0x01, 0x12, 0x66,
	0x0a, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x29, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x66, 0x65, 0x73,
	0x70, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52,
	0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28,
	0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x18, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x15, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x75, 0x72, 0x69, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x69, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x54, 0x0a, 0x24, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x0c, 0x52, 0x21, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c,
	0x6f, 0x67, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x17, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x75,
	0x72, 0x69, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x15, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x55, 0x72,
	0x69, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x24, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69,
	0x74, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x20, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c,
	0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x20, 0x69, 0x6d,
	0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x1c, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x66, 0x65,
	0x73, 0x70, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x04, 0x6a, 0x77, 0x6b, 0x73, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04,
	0x6a, 0x77, 0x6b, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x6a, 0x77, 0x6b, 0x73, 0x5f, 0x75, 0x72, 0x69,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x07, 0x6a, 0x77, 0x6b, 0x73, 0x55, 0x72,
	0x69, 0x88, 0x01, 0x01, 0x12, 0x56, 0x0a, 0x26, 0x6a, 0x77, 0x74, 0x5f, 0x62, 0x65, 0x61, 0x72,
	0x65, 0x72, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x21, 0x6a, 0x77, 0x74, 0x42, 0x65, 0x61, 0x72, 0x65,
	0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08,
	0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x48, 0x12,
	0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x69, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x19, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x13, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x14, 0x52, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x72, 0x69, 0x88, 0x01, 0x01,
	0x12, 0x39, 0x0a, 0x19, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x73, 0x18, 0x1d, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x16, 0x70, 0x6f, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x73, 0x18, 0x1e, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x73,
	0x12, 0x5c, 0x0a, 0x29, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x15, 0x52, 0x24, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x54,
	0x0a, 0x25, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c,
	0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x48, 0x16, 0x52,
	0x20, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x5e, 0x0a, 0x2a, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x70,
	0x61, 0x6e, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x48, 0x17, 0x52, 0x25, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x19, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x48, 0x18, 0x52, 0x17, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x17, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x69,
	0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x48, 0x19, 0x52, 0x15, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x69, 0x88,
	0x01, 0x01, 0x12, 0x40, 0x0a, 0x1a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6c, 0x67,
	0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1a, 0x52, 0x17, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6c,
	0x67, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x75, 0x72, 0x69, 0x73, 0x18, 0x25, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x55, 0x72, 0x69, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x26, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x19,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1b, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x15, 0x73, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x75,
	0x72, 0x69, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1c, 0x52, 0x13, 0x73, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x55, 0x72, 0x69, 0x88,
	0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x65,
	0x6e, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x08, 0x48, 0x1d, 0x52, 0x0b, 0x73, 0x6b, 0x69, 0x70,
	0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x1e, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x40, 0x0a, 0x1a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1f, 0x52, 0x17, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x1f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x69, 0x67, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6c, 0x67, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x20, 0x52,
	0x1b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x67, 0x88, 0x01, 0x01, 0x12,
	0x1c, 0x0a, 0x07, 0x74, 0x6f, 0x73, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x21, 0x52, 0x06, 0x74, 0x6f, 0x73, 0x55, 0x72, 0x69, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x2e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x44, 0x0a, 0x1c, 0x75, 0x73, 0x65, 0x72,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x61, 0x6c, 0x67, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x22,
	0x52, 0x19, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x6c, 0x67, 0x88, 0x01, 0x01, 0x42, 0x18,
	0x0a, 0x16, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x31, 0x0a, 0x2f, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x42, 0x2d, 0x0a, 0x2b, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x42, 0x32, 0x0a, 0x30, 0x5f, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x42, 0x26,
	0x0a, 0x24, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6c,
	0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x72,
	0x69, 0x42, 0x31, 0x0a, 0x2f, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x66, 0x65,
	0x73, 0x70, 0x61, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61,
	0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x69,
	0x42, 0x27, 0x0a, 0x25, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x5f, 0x75, 0x72, 0x69, 0x42, 0x27, 0x0a, 0x25, 0x5f, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63,
	0x69, 0x74, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x42, 0x23,
	0x0a, 0x21, 0x5f, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x73,
	0x70, 0x61, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6a, 0x77, 0x6b, 0x73, 0x5f, 0x75, 0x72, 0x69,
	0x42, 0x29, 0x0a, 0x27, 0x5f, 0x6a, 0x77, 0x74, 0x5f, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x5f,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x69, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x75, 0x72,
	0x69, 0x42, 0x2c, 0x0a, 0x2a, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x42,
	0x28, 0x0a, 0x26, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x42, 0x2d, 0x0a, 0x2b, 0x5f, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x6c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x75,
	0x72, 0x69, 0x42, 0x1d, 0x0a, 0x1b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6c,
	0x67, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x42, 0x18, 0x0a, 0x16, 0x5f,
	0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x5f, 0x75, 0x72, 0x69, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x63,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x1d, 0x0a, 0x1b, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x22, 0x0a, 0x20, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73,
	0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6c, 0x67, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x74,
	0x6f, 0x73, 0x5f, 0x75, 0x72, 0x69, 0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x61, 0x6c, 0x67, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x22, 0xdc, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x05, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x01, 0x52, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x58, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x22, 0x1e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x8d, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x50, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x60, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x06, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x21, 0x0a, 0x0f, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x55,
	0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x2f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2d,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_v0_clients_model_proto_rawDescOnce sync.Once
	file_v0_clients_model_proto_rawDescData = file_v0_clients_model_proto_rawDesc
)

func file_v0_clients_model_proto_rawDescGZIP() []byte {
	file_v0_clients_model_proto_rawDescOnce.Do(func() {
		file_v0_clients_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_v0_clients_model_proto_rawDescData)
	})
	return file_v0_clients_model_proto_rawDescData
}

var file_v0_clients_model_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_v0_clients_model_proto_goTypes = []interface{}{
	(*Client)(nil),                // 0: identity.platform.api.clients.Client
	(*ListClientsReq)(nil),        // 1: identity.platform.api.clients.ListClientsReq
	(*ListClientsResp)(nil),       // 2: identity.platform.api.clients.ListClientsResp
	(*GetClientReq)(nil),          // 3: identity.platform.api.clients.GetClientReq
	(*GetClientResp)(nil),         // 4: identity.platform.api.clients.GetClientResp
	(*CreateClientReq)(nil),       // 5: identity.platform.api.clients.CreateClientReq
	(*CreateClientResp)(nil),      // 6: identity.platform.api.clients.CreateClientResp
	(*UpdateClientReq)(nil),       // 7: identity.platform.api.clients.UpdateClientReq
	(*UpdateClientResp)(nil),      // 8: identity.platform.api.clients.UpdateClientResp
	(*RemoveClientReq)(nil),       // 9: identity.platform.api.clients.RemoveClientReq
	(*RemoveClientResp)(nil),      // 10: identity.platform.api.clients.RemoveClientResp
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
	(*structpb.Struct)(nil),       // 12: google.protobuf.Struct
	(*http.Pagination)(nil),       // 13: identity.platform.api.types.Pagination
}
var file_v0_clients_model_proto_depIdxs = []int32{
	11, // 0: identity.platform.api.clients.Client.created_at:type_name -> google.protobuf.Timestamp
	12, // 1: identity.platform.api.clients.Client.jwks:type_name -> google.protobuf.Struct
	12, // 2: identity.platform.api.clients.Client.metadata:type_name -> google.protobuf.Struct
	11, // 3: identity.platform.api.clients.Client.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 4: identity.platform.api.clients.ListClientsResp.data:type_name -> identity.platform.api.clients.Client
	13, // 5: identity.platform.api.clients.ListClientsResp._meta:type_name -> identity.platform.api.types.Pagination
	0,  // 6: identity.platform.api.clients.GetClientResp.data:type_name -> identity.platform.api.clients.Client
	0,  // 7: identity.platform.api.clients.CreateClientReq.client:type_name -> identity.platform.api.clients.Client
	0,  // 8: identity.platform.api.clients.CreateClientResp.data:type_name -> identity.platform.api.clients.Client
	0,  // 9: identity.platform.api.clients.UpdateClientReq.client:type_name -> identity.platform.api.clients.Client
	0,  // 10: identity.platform.api.clients.UpdateClientResp.data:type_name -> identity.platform.api.clients.Client
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_v0_clients_model_proto_init() }
func file_v0_clients_model_proto_init() {
	if File_v0_clients_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v0_clients_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Client); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_clients_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClientsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_clients_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClientsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_clients_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_clients_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_clients_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClientReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_clients_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClientResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_clients_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClientReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_clients_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClientResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_clients_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveClientReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v0_clients_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveClientResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v0_clients_model_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_v0_clients_model_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_v0_clients_model_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_v0_clients_model_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_v0_clients_model_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_v0_clients_model_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_v0_clients_model_proto_msgTypes[10].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v0_clients_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v0_clients_model_proto_goTypes,
		DependencyIndexes: file_v0_clients_model_proto_depIdxs,
		MessageInfos:      file_v0_clients_model_proto_msgTypes,
	}.Build()
	File_v0_clients_model_proto = out.File
	file_v0_clients_model_proto_rawDesc = nil
	file_v0_clients_model_proto_goTypes = nil
	file_v0_clients_model_proto_depIdxs = nil
}
