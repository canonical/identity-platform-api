components:
    schemas:
        apistatusStatus:
            properties:
                buildInfo:
                    $ref: '#/components/schemas/statusBuildInfo'
                status:
                    type: string
            type: object
        googlerpcStatus:
            properties:
                code:
                    format: int32
                    type: integer
                details:
                    items:
                        $ref: '#/components/schemas/protobufAny'
                    type: array
                message:
                    type: string
            type: object
        groupsCreateGroupResp:
            properties:
                Meta:
                    $ref: '#/components/schemas/typesPagination'
                data:
                    items:
                        $ref: '#/components/schemas/groupsGroup'
                    type: array
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        groupsGetGroupIdentitiesResp:
            properties:
                Meta:
                    $ref: '#/components/schemas/typesPagination'
                data:
                    items:
                        type: string
                    type: array
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        groupsGetGroupResp:
            properties:
                Meta:
                    $ref: '#/components/schemas/typesPagination'
                data:
                    items:
                        $ref: '#/components/schemas/groupsGroup'
                    type: array
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        groupsGetGroupRolesResp:
            properties:
                Meta:
                    $ref: '#/components/schemas/typesPagination'
                data:
                    items:
                        type: string
                    type: array
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        groupsGroup:
            properties:
                id:
                    type: string
                name:
                    type: string
            type: object
        groupsIdentities:
            properties:
                identities:
                    items:
                        type: string
                    type: array
            type: object
        groupsListGroupEntitlementsResp:
            properties:
                data:
                    items:
                        type: string
                    type: array
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        groupsListGroupsResp:
            properties:
                Meta:
                    $ref: '#/components/schemas/typesPagination'
                data:
                    items:
                        type: string
                    type: array
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        groupsRemoveGroupEntitlementResp:
            properties:
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        groupsRemoveGroupIdentityResp:
            properties:
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        groupsRemoveGroupResp:
            properties:
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        groupsRemoveGroupRoleResp:
            properties:
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        groupsRoles:
            properties:
                roles:
                    items:
                        type: string
                    type: array
            type: object
        groupsUpdateGroupEntitlementsResp:
            properties:
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        groupsUpdateGroupIdentitiesResp:
            properties:
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        groupsUpdateGroupResp:
            type: object
        groupsUpdateGroupRolesResp:
            properties:
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        protobufAny:
            additionalProperties: {}
            description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }
                    // or ...
                    if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                      foo = any.unpack(Foo.getDefaultInstance());
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".

                JSON
                ====
                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            properties:
                '@type':
                    description: |-
                        A URL/resource name that uniquely identifies the type of the serialized
                        protocol buffer message. This string must contain at least
                        one "/" character. The last segment of the URL's path must represent
                        the fully qualified name of the type (as in
                        `path/google.protobuf.Duration`). The name should be in a canonical form
                        (e.g., leading "." is not accepted).

                        In practice, teams usually precompile into the binary all types that they
                        expect it to use in the context of Any. However, for URLs which use the
                        scheme `http`, `https`, or no scheme, one can optionally set up a type
                        server that maps type URLs to message definitions as follows:

                        * If no scheme is provided, `https` is assumed.
                        * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in the official
                        protobuf release, and it is not used for type URLs beginning with
                        type.googleapis.com. As of May 2023, there are no widely used type server
                        implementations and no plans to implement one.

                        Schemes other than `http`, `https` (or the empty scheme) might be
                        used with implementation specific semantics.
                    type: string
            type: object
        rolesCreateRoleResp:
            properties:
                Meta:
                    $ref: '#/components/schemas/typesPagination'
                data:
                    items:
                        $ref: '#/components/schemas/rolesRole'
                    type: array
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        rolesGetRoleGroupsResp:
            properties:
                Meta:
                    $ref: '#/components/schemas/typesPagination'
                data:
                    items:
                        type: string
                    type: array
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        rolesGetRoleResp:
            properties:
                Meta:
                    $ref: '#/components/schemas/typesPagination'
                data:
                    items:
                        $ref: '#/components/schemas/rolesRole'
                    type: array
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        rolesListRoleEntitlementsResp:
            properties:
                data:
                    items:
                        type: string
                    type: array
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        rolesListRolesResp:
            properties:
                Meta:
                    $ref: '#/components/schemas/typesPagination'
                data:
                    items:
                        type: string
                    type: array
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        rolesRemoveRoleEntitlementResp:
            properties:
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        rolesRemoveRoleResp:
            properties:
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        rolesRole:
            properties:
                id:
                    type: string
                name:
                    type: string
            type: object
        rolesUpdateRoleEntitlementsResp:
            properties:
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        rolesUpdateRoleResp:
            type: object
        statusBuildInfo:
            properties:
                commitHash:
                    type: string
                name:
                    type: string
                version:
                    type: string
            type: object
        typesErrorResponse:
            properties:
                message:
                    type: string
                status:
                    format: int32
                    type: integer
            type: object
        typesPagination:
            properties:
                next:
                    type: string
                pageToken:
                    type: string
                prev:
                    type: string
                size:
                    format: int32
                    type: integer
            type: object
        typesPermission:
            properties:
                object:
                    type: string
                relation:
                    type: string
            type: object
        typesPermissions:
            properties:
                updates:
                    items:
                        $ref: '#/components/schemas/typesPermission'
                    type: array
            type: object
    securitySchemes:
        OAuth2:
            flows:
                authorizationCode:
                    authorizationUrl: https://example.com/oauth/authorize
                    scopes:
                        email: ""
                        openid: ""
                        profile: ""
                    tokenUrl: https://example.com/oauth/token
            type: oauth2
externalDocs:
    description: REST API for the Admin UI service
    url: https://github.com/canonical/identity-platform-admin-ui/blob/main/API.md
info:
    contact:
        name: Identity Platform API
        url: https://github.com/canonical/identity-platform-api
    description: REST API for the Admin UI service
    license:
        name: AGPL-3.0
        url: https://github.com/canonical/identity-platform-api/blob/main/LICENSE
    title: Identity Platform API
    version: "0.1"
openapi: 3.0.3
paths:
    /api/v0/groups:
        get:
            operationId: GroupsService_ListGroups
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/groupsListGroupsResp'
                    description: A successful response.
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - GroupsService
        post:
            operationId: GroupsService_CreateGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/groupsGroup'
                required: true
                x-originalParamName: group
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/groupsCreateGroupResp'
                    description: A successful response.
                "201":
                    content:
                        application/json:
                            schema: {}
                    description: ""
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Bad request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - GroupsService
    /api/v0/groups/{id}:
        delete:
            operationId: GroupsService_RemoveGroup
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/groupsRemoveGroupResp'
                    description: A successful response.
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - GroupsService
        get:
            operationId: GroupsService_GetGroup
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/groupsGetGroupResp'
                    description: A successful response.
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - GroupsService
        patch:
            operationId: GroupsService_UpdateGroup
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/groupsGroup'
                required: true
                x-originalParamName: group
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/groupsUpdateGroupResp'
                    description: A successful response.
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                "501":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Not implemented
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - GroupsService
    /api/v0/groups/{id}/entitlements:
        get:
            operationId: GroupsService_ListGroupEntitlements
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: Base64 encoded pagination info
                  in: header
                  name: X-Token-Pagination
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/groupsListGroupEntitlementsResp'
                    description: A successful response.
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - GroupsService
        patch:
            operationId: GroupsService_UpdateGroupEntitlements
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/typesPermissions'
                required: true
                x-originalParamName: entitlementsPatchReq
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/groupsUpdateGroupEntitlementsResp'
                    description: A successful response.
                "201":
                    content:
                        application/json:
                            schema: {}
                    description: ""
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Bad request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - GroupsService
    /api/v0/groups/{id}/entitlements/{entitlementId}:
        delete:
            operationId: GroupsService_RemoveGroupEntitlement
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - in: path
                  name: entitlementId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/groupsRemoveGroupEntitlementResp'
                    description: A successful response.
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Bad request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - GroupsService
    /api/v0/groups/{id}/identities:
        get:
            operationId: GroupsService_GetGroupIdentities
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/groupsGetGroupIdentitiesResp'
                    description: A successful response.
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - GroupsService
        patch:
            operationId: GroupsService_UpdateGroupIdentities
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/groupsIdentities'
                required: true
                x-originalParamName: identities
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/groupsUpdateGroupIdentitiesResp'
                    description: A successful response.
                "201":
                    content:
                        application/json:
                            schema: {}
                    description: ""
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Bad request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - GroupsService
    /api/v0/groups/{id}/identities/{identityId}:
        delete:
            operationId: GroupsService_RemoveGroupIdentity
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - in: path
                  name: identityId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/groupsRemoveGroupIdentityResp'
                    description: A successful response.
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - GroupsService
    /api/v0/groups/{id}/roles:
        get:
            operationId: GroupsService_GetGroupRoles
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/groupsGetGroupRolesResp'
                    description: A successful response.
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - GroupsService
        post:
            operationId: GroupsService_UpdateGroupRoles
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/groupsRoles'
                required: true
                x-originalParamName: roles
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/groupsUpdateGroupRolesResp'
                    description: A successful response.
                "201":
                    content:
                        application/json:
                            schema: {}
                    description: ""
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Bad request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - GroupsService
    /api/v0/groups/{id}/roles/{roleId}:
        delete:
            operationId: GroupsService_RemoveGroupRole
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - in: path
                  name: roleId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/groupsRemoveGroupRoleResp'
                    description: A successful response.
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - GroupsService
    /api/v0/metrics:
        get:
            operationId: MetricsService_ListMetrics
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/protobufAny'
                    description: A successful response.
                "401":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the user is not authenticated.
                "403":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the user does not have permission to access the resource.
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - MetricsService
    /api/v0/roles:
        get:
            operationId: RolesService_ListRoles
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rolesListRolesResp'
                    description: A successful response.
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - RolesService
        post:
            operationId: RolesService_CreateRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/rolesRole'
                required: true
                x-originalParamName: role
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rolesCreateRoleResp'
                    description: A successful response.
                "201":
                    content:
                        application/json:
                            schema: {}
                    description: ""
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - RolesService
    /api/v0/roles/{id}:
        delete:
            operationId: RolesService_RemoveRole
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rolesRemoveRoleResp'
                    description: A successful response.
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - RolesService
        get:
            operationId: RolesService_GetRole
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rolesGetRoleResp'
                    description: A successful response.
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Not found
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - RolesService
        patch:
            operationId: RolesService_UpdateRole
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/rolesRole'
                required: true
                x-originalParamName: role
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rolesUpdateRoleResp'
                    description: A successful response.
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                "501":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Not implemented
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - RolesService
    /api/v0/roles/{id}/entitlements:
        get:
            operationId: RolesService_ListRoleEntitlements
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: Base64 encoded pagination info
                  in: header
                  name: X-Token-Pagination
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rolesListRoleEntitlementsResp'
                    description: A successful response.
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - RolesService
        patch:
            operationId: RolesService_UpdateRoleEntitlements
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/typesPermissions'
                required: true
                x-originalParamName: entitlementsPatchReq
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rolesUpdateRoleEntitlementsResp'
                    description: A successful response.
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - RolesService
    /api/v0/roles/{id}/entitlements/{entitlementId}:
        delete:
            operationId: RolesService_RemoveRoleEntitlement
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - in: path
                  name: entitlementId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rolesRemoveRoleEntitlementResp'
                    description: A successful response.
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - RolesService
    /api/v0/roles/{id}/groups:
        get:
            operationId: RolesService_GetRoleGroups
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/rolesGetRoleGroupsResp'
                    description: A successful response.
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - RolesService
    /api/v0/status:
        get:
            operationId: StatusService_GetStatus
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/apistatusStatus'
                    description: A successful response.
                "401":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the user is not authenticated.
                "403":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the user does not have permission to access the resource.
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - StatusService
    /api/v0/version:
        get:
            operationId: StatusService_GetVersion
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/statusBuildInfo'
                    description: A successful response.
                "401":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the user is not authenticated.
                "403":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the user does not have permission to access the resource.
                "404":
                    content:
                        application/json:
                            schema:
                                format: object
                                type: object
                    description: Returned when the resource does not exist.
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/typesErrorResponse'
                    description: Internal server error
            tags:
                - StatusService
tags:
    - name: GroupsService
    - name: MetricsService
    - name: RolesService
    - name: StatusService
